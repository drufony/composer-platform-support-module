<?php

/**
 * Implements hook_composer_json_alter().
 *
 * This hook filters out dependencies loaded by the skeleton project's
 * composer.json files and its dependencies.
 *
 * @param $json
 */
function composerplatformsupport_composer_json_alter(&$json) {
  $file = DRUPAL_ROOT .'/../vendor/composer/installed.json';
  if (file_exists($file)) {
    $var = file_get_contents($file);
    $installed = drupal_json_decode($var);

    // These are merged in composer_manager_build_json, except we don't need
    // to filter repositories.
    $to_diff = array(
      'require',
      'require-dev',
      'conflict',
      'replace',
      'provide',
      'suggest',
    );

    foreach ($installed as $installed_package) {

      // Remove already-installed packages from the JSON.
      foreach ($to_diff as $key) {
        if (isset($json[$key][$installed_package['name']])) {
          unset($json[$key][$installed_package['name']]);
        }
      }

      // Remove autoload configurations that are part of the skeleton project's
      // autoloader.
      foreach (array_keys($json['autoload']) as $key) {
        if (isset($installed_package['autoload'][$key])) {
          $json['autoload'][$key] = array_diff_key($json['autoload'][$key], $installed_package['autoload'][$key]);
        }
      }
    }

    // Remove empty autoload configurations.
    $json['autoload'] = array_filter($json['autoload']);
    $json = array_filter($json);
  }
}
